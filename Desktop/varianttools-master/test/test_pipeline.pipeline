# Copyright (C) 2013 Bo Peng (bpeng@mdanderson.org)
# Distributed under GPL. see <http://www.gnu.org/licenses/>
#
# Please refer to http://varianttools.sourceforge.net/Simulation/New for
# a description of the format of this file.

[pipeline description]
description=A pipeline for testing features of VST.

seed=12345

[*_0: no_input]
action=ImportModules('simulation')

[checkvtools_10]
input=test_pipeline.pipeline
action=CheckVariantToolsVersion('2.3.1')

[checkvtools_fail_20]
input=test_pipeline.pipeline
action=CheckVariantToolsVersion('10')


[checkcommand_11]
input=test_pipeline.pipeline
action=CheckCommands(['vtools', 'vtools_report'])

[checkcommand_fail_11]
input=test_pipeline.pipeline
action=CheckCommands(['vtools_unknown', 'vtools_report'])

[runcommand_11]
input=test_pipeline.pipeline
action=RunCommand('vtools init test -f')

[evolvepop*_12]
action=RunCommand('vtools init test --build hg19 -f')

[runcommand_fail_11]
input=test_pipeline.pipeline
action=RunCommand('vtools initf test -f')

[createpop_10]
input=test_pipeline.pipeline
action=CreatePopulation(
	size=1000,
	regions='chr1:1-2000',
	output='cache/${pipeline_name}_init_${seed}.pop')

[evolvepop*_10]
input=test_pipeline.pipeline
action=CreatePopulation(
	size=1000,
	regions='chr1:1-2000',
	output='cache/evolvepop_init_${seed}.pop')

[evolvepop*_11,casectrl*_11,random*_11]
action=ImportModules('simuPOP.demography')

[evolvepop_fail_110]
action=EvolvePopulation(
	demoModel=ExponentialGrowthModel(r=0.001, T=10),
	)

[evolvepop1_110]
action=EvolvePopulation(
	demoModel=ExponentialGrowthModel(r=0.001, T=10),
	output='cache/evolvepop_${seed}.pop')

[evolvepop1_120]
action=EvolvePopulation(
	transmitter=FineScaleRecombinator(regions='chr1:1-1000'),
	demoModel=ExponentialGrowthModel(r=0.001, T=10),
	output='cache/evolvepop_${seed}_2.pop')

[evolvepop3_130]
action=EvolvePopulation(
	selector=ProteinSelector(regions='chr1:1-1000'),
	demoModel=ExponentialGrowthModel(r=0.001, T=10),
	output='cache/evolvepop_${seed}_3.pop')

[evolvepop4_120]
action=EvolvePopulation(
	mutator=RefGenomeMutator(regions='chr1:1-1000', model='K80',
		rate=[1e-8, 2]),
	demoModel=ExponentialGrowthModel(r=0.001, T=10),
	output='cache/evolvepop_${seed}_3.pop')


[casectrl*_10,random*_10]
input=test_pipeline.pipeline
action=CreatePopulation(
	size=1000,
	regions='chr1:1-2000',
	output='cache/casectrl_init_${seed}.pop')

[casectrl*_120,random*_120]
action=RunCommand(['vtools init casectrl --build hg19 -f',
	'vtools use refGene'])

[casectrl*_130,random*_130]
action=EvolvePopulation(
	mutator=RefGenomeMutator(regions='chr1:1-1000', model='K80',
		rate=[1e-3, 2]),
	demoModel=ExponentialGrowthModel(r=0.001, T=10),
	output='cache/casectrl_${seed}_1.pop')

[casectrl1_1100]
action=DrawCaseControlSample(
	cases=10, controls=10,
	penetrance=ProteinPenetrance(regions='chr1:1-1000'),
	output='cache/casectrl_sample_${seed}.pop')

[casectrl2_1100]
action=DrawCaseControlSample(
	cases=10, controls=10,
	penetrance=ProteinPenetrance(regions='chr1:1-1000'),
	output=['cache/casectrl_sample_${seed}_21.pop', 'cache/casectrl_sample_${seed}_22.pop'])

[random1_1100]
action=DrawRandomSample(
	sizes=10,
	output='cache/random_sample_${seed}.pop')

[random2_1100]
action=DrawRandomSample(
	sizes=10,
	output=['cache/random_sample_${seed}_21.pop', 'cache/random_sample_${seed}_22.pop'])
