# Copyright (C) 2011 - 2013 Bo Peng (bpeng@mdanderson.org)
# Distributed under GPL. see <http://www.gnu.org/licenses/>
#
# Please refer to http://varianttools.sourceforge.net/Pipeline/New for
# a description of the format of this file.

[pipeline description]
description=A pipeline to align raw reads from fastq or BAM/SAM files using
	Mosaik-aligner. It uses hg19 of human reference genome and assumes
	paired-end reads in plain text and compressed formats.

# resource_directory is set to ~/.variant_tools/pipeline_resource/gatk23_hg19
RESOURCE_DIR=${LOCAL_RESOURCE}/pipeline_resource/gatk23_hg19


[DEFAULT]
picard_path=
picard_path_comment=Path to picard jar files

gatk_path=
gatk_path_comment=Path to GATK jar file GenomeAnalysisTK.jar

opt_java=-Xmx4g -XX:-UseGCOverheadLimit
#

opt_mosaikbuild=

#
# -sam: sample name, obtained from output bam file name
# -st: sequencing technology: illumina
# -id: read group identifier
opt_read_group=-st illumina -mfl 500
	-sam ${CMD_OUTPUT: os.path.basename(CMD_OUTPUT[0]).rsplit('.', 1)[0]}
opt_read_group_comment=Read group options such as -cn (center name),
	-ds (description) -id (read group identifier) -ln (library name)
	-mfl (median fragment length) -pu (platform unit) -sam (sample name)
	and -st (sequencing technology) that will be passd to command
	MosaikBuild to specify read group tag. Default to -st illumina
	-sam where sample name is obtained from output bam filename.

opt_mosaikjump=-hs 15

opt_mosaikaligner=-hs 15 -mm 4 -mhp 100 -act 20
opt_mosaikaligner_comment=Parameters to MosaikAligner -hs (hash size) -mm
	(mismatch allowed) -mhp (maximum number of hash positions to be used
	per seed)

[step_0]
action=DownloadResource(resource='
    ftp://gsapubftp-anonymous@ftp.broadinstitute.org/bundle/2.3/hg19/ucsc.hg19.fasta.gz
    ftp://gsapubftp-anonymous@ftp.broadinstitute.org/bundle/2.3/hg19/ucsc.hg19.fasta.gz.md5',
    resource_dir="${RESOURCE_DIR}")


[step_10]
# input = output = ${CMD_INPUT}
action=CheckCommands(['MosaikBuild', 'MosaikAligner', 'samtools', 'java'])
comment=Check existence of commands MosaikAlign, samtools and java

[step_20]
# input = output = ${CMD_INPUT}
action=CheckFiles(["%(picard_path)s/SortSam.jar", "%(gatk_path)s/GenomeAnalysisTK.jar"])
comment=Check existence of class files for Picard and GATK

[step_30]
# customized input and output
input=${RESOURCE_DIR}/ucsc.hg19.fasta.gz
# this step will be ignored if output exists and newer than $INPUT
action=RunCommand('MosaikBuild -fr ucsc.hg19.fasta.gz -oa ucsc.hg19.fasta.dat}',
    working_dir='${RESOURCE_DIR}',
    output='${RESOURCE_DIR}/ucsc.hg19.fasta.dat')
comment=Build Mosaik index for build hg19 of reference genome

[step_31]
# customized input and output
input=${RESOURCE_DIR}/ucsc.hg19.fasta
# this step will be ignored if output exists and newer than $INPUT
action=RunCommand('MosaikJump -ia ${INPUT: INPUT[0] + ".dat"}
	%(opt_mosaikjump)s -out ${INPUT: INPUT[0] + "_15"}',
    working_dir='${RESOURCE_DIR}',
    output='${RESOURCE_DIR}/ucsc.hg19.fasta_15')
comment=Build Mosaik index for build hg19 of reference genome

[step_101]
# input is output of previous step ${OUTPUT100}
action=DecompressFiles(dest_dir="${CACHE_DIR}")
comment=Decompress all input files (.tgz2, .tar, .tar.gz, .gz, .tgz, .zip etc) to
    a cache directory. The original files are untouched if not compressed.

[step_200]
input=${OUTPUT101}
action=RunCommand(cmd=r"MosaikBuild
		-q ${INPUT: INPUT[0]}
		-q2 ${INPUT: INPUT[1]}
		%(opt_read_group)s
		-out ${CACHE_DIR}/${INPUT: os.path.basename(INPUT[0]) + '.mkb'}",
    output="${CACHE_DIR}/${INPUT: os.path.basename(INPUT[0]) + '.mkb'}")
input_emitter=EmitInput(group_by='paired')
comment=Running MosaikBuild to create mkb file

[step_300]
action=RunCommand(cmd=r"MosaikAligner
		-in ${INPUT}
		-out ${INPUT: INPUT[0][:-4] + '.mka'}
		-ia '${RESOURCE_DIR}/ucsc.hg19.fasta.dat'
		-j '${RESOURCE_DIR}/ucsc.hg19.fasta_15'
		%(opt_mosaikaligner)s
		",
    output="${INPUT: INPUT[0][:-4] + '.mka.bam'}")
input_emitter=EmitInput(group_by='paired')
comment=Running MosaikAlign to align reads to reference genome
