# Copyright (C) 2013 Bo Peng (bpeng@mdanderson.org)
# Distributed under GPL. see <http://www.gnu.org/licenses/>
#
# Please refer to http://varianttools.sourceforge.net/Pipeline/New for
# a description of the format of this file.

[pipeline description]
description=A pipeline to handle illumina data prepared by CASAVA 1.8+.
  It imports variants from SNPs.vcf and Indel.vcf of multiple samples,
  separate maxgt and poly into different projects, calculate a few standard
  statistics and apply a few filters. All results are saved as variant
  tools snapshots. This pipeline uses command vtools so multi-processing
  is not supported.

load_data_description=This pipeline accepts a list of directories under which
  SNPs and Indels are listed in files Variations/SNPs.vcf and Variations/Indels.vcf.
  It reads all variants and save the project to a snapshot with raw data. It
  then removes MAXGT or POLY samples, rename samples, merge SNP and Indels
  remove variants without any genotype in all samples, create variant tables
  (all, SNVs and Indels) for each sample, and save results to two other snapshots
  for maxgt and poly data respectively.


[DEFAULT]
geno_info=filter qual DP_geno GQ_geno PL_geno
geno_info_comment=Genotype information fields imported from VCF files

build=hg19
build_comment=Build of reference genome of the project.

[load_data_10]
input=${CMD_INPUT: [os.path.join(x, 'Variations/SNPs.vcf') for x in CMD_INPUT]
    + [os.path.join(x, 'Variations/Indels.vcf') for x in CMD_INPUT]}
input_emitter=EmitInput('all')
action=RunCommand(cmd=[
        'vtools import ${INPUT: ' '.join(INPUT)} --geno_info %(geno_info)s --build %(build)s',
        'vtools admin --save_snapshot ${CMD_OUTPUT: CMD_OUTPUT[0]}
            "SNVs and Indels imported from SNPs.vcf and Indels.vcf under ${CMD_INPUT: str(len(CMD_INPUT))} directories."'],
    output='${CMD_OUTPUT: CMD_OUTPUT[0]}')
comment=Load SNP and Indel variants from Variations/SNPs.vcf and Variations/Indels.vcf
    under specified directory. Save all inputted variants to the first snapshot file
    specified by --output

[load_data_20]
input_emitter=EmitInput('all')
action=RunCommand(cmd=[
        'vtools admin --load_snapshot ${CMD_OUTPUT: CMD_OUTPUT[0]}',
        'vtools remove samples "sample_name like \'%%_POLY\'"',
        'vtools admin --rename_samples 1 _MAXGT ""',
        'vtools admin --merge_samples',
        'vtools remove genotypes "filter != \'PASS\' OR GT = 0"',
        'vtools update variant --from_stat "num=#(GT)"',
        'vtools select variant "num = 0" -t empty',
        'vtools remove variants empty',
		'for name in `vtools show samples | tail -n +2 | cut -f 1`; do
			vtools select variant --samples "sample_name = \'$name\'" -t "$name";
			vtools select "$name" "length(alt)=1" "length(ref)=1" "alt!=\'-\'" "ref!=\'-\'" -t "${name}_SNV" "SNPs in table ${name}";
			vtools compare "$name" "${name}_SNV" --difference "${name}_INDEL" "Indels in table ${name}";
		done',
        'vtools admin --save_snapshot ${CMD_OUTPUT: CMD_OUTPUT[1]}
            "Raw data from MAXGT model after removing samples and variants from the POLY model"' ],
    output='${CMD_OUTPUT: CMD_OUTPUT[1]}')
input_emitter=EmitInput(select=${CMD_OUTPUT: len(CMD_OUTPUT) > 1})
comment=Remove _POLY samples, merge SNPs and INDELs, remove genotypes that do not pass filter
    (filter != "PASS"), calculate genotype count of all variants, remove variants without any
    genotype, and save results to the second  snapshot file specified by --output

[load_data_30]
input_emitter=EmitInput('all')
action=RunCommand(cmd=[
        'vtools admin --load_snapshot ${CMD_OUTPUT: CMD_OUTPUT[0]}',
	    'vtools remove samples "sample_name like \'%%_MAXGT\'"',
        'vtools admin --rename_samples 1 _POLY ""',
        'vtools admin --merge_samples',
        'vtools remove genotypes "filter != \'PASS\' OR GT = 0"',
        'vtools update variant --from_stat "num=#(GT)"',
        'vtools select variant "num = 0" -t empty',
        'vtools remove variants empty',
		'for name in `vtools show samples | tail -n +2 | cut -f 1`; do
			vtools select variant --samples "sample_name = \'$name\'" -t "$name";
			vtools select "$name" "length(alt)=1" "length(ref)=1" "alt!=\'-\'" "ref!=\'-\'" -t "${name}_SNV";
			vtools compare "$name" "${name}_SNV" --difference "${name}_INDEL";
		done',
        'vtools admin --save_snapshot ${CMD_OUTPUT: CMD_OUTPUT[2]}
            "Raw data from POLY model after removing samples and variants from the MAXGT model"' ],
    output='${CMD_OUTPUT: CMD_OUTPUT[2]}')
input_emitter=EmitInput(select=${CMD_OUTPUT: len(CMD_OUTPUT) > 2})
comment=Remove _MAXGT samples, merge SNPs and INDELs, remove genotypes that do not pass filter
    (filter != "PASS"), calculate genotype count of all variants, remove variants without any
    genotype, and save results to the second  snapshot file specified by --output
