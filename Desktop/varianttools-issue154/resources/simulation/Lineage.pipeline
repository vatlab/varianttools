# Copyright (C) 2013 Bo Peng (bpeng@mdanderson.org)
# Distributed under GPL. see <http://www.gnu.org/licenses/>
#
# Please refer to http://varianttools.sourceforge.net/Simulation/New for
# a description of the format of this file.

[pipeline description]
description=Simulation for association mapping with lineage information.


[DEFAULT]
regions=chr1:700001-900000
regions_comment=

causing_genes=chr1:800001-900000
causing_genes_comment=A subset of regions from which a phenotype is simulated.

scale=1
scale_comment=Scaling factor to speed up the simulation by scaling down the
  simulation while boosting mutation, selection and recombination rates.

[Lineage_0]
action=CheckVariantToolsVersion('2.3.1')
comment=Check the version of variant tools. Version 2.3.1 or higher is required
	for the execution of this simulation.

[*_1]
action=ImportModules(['simuPOP.demography', 'Lineage.py'])
comment=Import required modules.

[*_10]
# used for data simulation and analyses of 4 different types of samples
action=RunCommand([
	'vtools init Lineage_ex2 --force',
	'vtools use refGene',
	'vtools use ccdsGene_exon'])
comment=Create a new project Lineage_ex2 and link the refGene and ccdsGene_exon databases to the project.

[*_30]
input_emitter=EmitInput(select=${pipeline_name:not os.path.isfile('cache/' + pipeline_name + '_init.pop')})
action=CreatePopulation(
	size=1000,
	regions='%(regions)s',
	output='cache/${pipeline_name}_init.pop')
output='cache/${pipeline_name}_init.pop'
comment=Create an empty simuPOP population for specified regions.

[*_35]
input='cache/${pipeline_name}_init.pop'
input_emitter=EmitInput(select=${pipeline_name:not os.path.isfile('cache/' + pipeline_name + '_burnin.pop')})
action=EvolvePopulation(
	output='cache/${pipeline_name}_burnin.pop',
	mutator=RefGenomeMutator(regions='%(regions)s', model='K80', rate=[1.8e-8 * %(scale)s, 2]),
	transmitter=FineScaleRecombinator(regions='%(regions)s', scale=%(scale)s),
	selector=ProteinSelector('%(regions)s', s_missense=0.0001 * %(scale)s,
		s_stoploss=0.0001 * %(scale)s, s_stopgain=0.001 * %(scale)s),
	demoModel=InstantChangeModel(T=int(80000 / %(scale)s), N0=int(7300 / %(scale)s)),
	)
output='cache/${pipeline_name}_burnin.pop'
comment=Burn-in the population to create an ancestral population that will be used by all replicate simulations.

[*_40]
input='cache/${pipeline_name}_burnin.pop'
action=EvolvePopulation(
	output='${pipeline_name}_evolved_${seed}.pop',
	mutator=RefGenomeMutator(regions='%(regions)s', model='K80', rate=[1.8e-8 * %(scale)s, 2]),
	transmitter=FineScaleRecombinator(regions='%(regions)s', scale=%(scale)s),
	selector=ProteinSelector('%(regions)s', s_missense=0.0001 * %(scale)s,
		s_stoploss=0.0001 * %(scale)s, s_stopgain=0.001 * %(scale)s),
	demoModel=NoAS_OutOfAfricaModel(20000, scale=%(scale)s)
	)
comment=Evolve and expand the population using a K80 mutation model	and a demographic
	model that models the settlement of new world model of the Mexican American population.
