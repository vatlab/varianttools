# Copyright (C) 2013 Bo Peng (bpeng@mdanderson.org)
# Distributed under GPL. see <http://www.gnu.org/licenses/>
#
# Please refer to http://varianttools.sourceforge.net/Pipeline/New for
# a description of the format of this file.

[pipeline description]
description=This pipeline creates a customized .fmt file to import all variant
    and genotype info fields of input vcf files.

import_vcf_description=This pipeline creates a customized .fmt file by scanning
    the header of input vcf files and imports all variant and genotype info fields
    of the input files in VCF format. If an output file is specified (--output),
    it will be used to save the customized .fmt file.

# if an output file is given via --output, $FMT_FILE is this output,
# otherwise it is set to cache/INPUTFILE.fmt
FMT_FILE=${CMD_OUTPUT,CACHE_DIR,CMD_INPUT: (CMD_OUTPUT[0] if CMD_OUTPUT[0].endswith('.fmt') else CMD_OUTPUT[0] + '.fmt') if CMD_OUTPUT else os.path.join(CACHE_DIR, os.path.basename(CMD_INPUT[0]) + '.fmt')}

[DEFAULT]
build=
build_comment=Build of reference genome, which will be guessed from the input
    vcf file (if it contains a comment line with reference genome information).

[import_vcf_0]
action=CheckVariantToolsVersion('2.1.1')
comment=Check the version of variant tools (version 2.1.1 and above is required
    to execute this pipeline)

[import_vcf_10]
action=FieldsFromTextFile("${FMT_FILE}")
REF_BUILD=${FMT_FILE: "%(build)s" if "%(build)s" else ('hg18' if [x for x in open(FMT_FILE).read().split('\n') if 'NCBI36' in x or 'hg18' in x] else 'hg19')}
emitter=EmitInput()
comment=Create a feild description file from input text file.

[import_vcf_20]
action=RunCommand(cmd=
    "vtools import ${CMD_INPUT} --build ${REF_BUILD} --format ${FMT_FILE}")
comment=Import input files using customized .fmt file. Please check the .fmt
    file if the import process fails due to incorrect field information.
